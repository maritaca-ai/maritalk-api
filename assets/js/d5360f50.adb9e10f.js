"use strict";(self.webpackChunkmaritaca=self.webpackChunkmaritaca||[]).push([[407],{7022:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=t(4848),s=t(8453),r=t(1470),o=t(9365);const i={id:"use-cases",title:"Use Cases"},l="Use Cases",c={id:"en/use-cases",title:"Use Cases",description:"Usage Examples in Other Languages",source:"@site/docs/en/use-cases.md",sourceDirName:"en",slug:"/en/use-cases",permalink:"/en/use-cases",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"use-cases",title:"Use Cases"},sidebar:"sidebarEn",previous:{title:"Library",permalink:"/en/library"},next:{title:"Function Calls",permalink:"/en/function-call"}},u={},p=[{value:"Usage Examples in Other Languages",id:"usage-examples-in-other-languages",level:2},{value:"Integrations",id:"integrations",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"use-cases",children:"Use Cases"})}),"\n",(0,a.jsx)(n.h2,{id:"usage-examples-in-other-languages",children:"Usage Examples in Other Languages"}),"\n",(0,a.jsx)(n.p,{children:"Here are examples of how you can integrate the Maritaca API in other languages:"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(o.A,{value:"JavaScript",label:"JavaScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const process = require(\'node:process\');\n\nconst CHAT_API_URL = "https://chat.maritaca.ai/api/chat/inference";\n\nif (!process.env.MARITALK_API_KEY) {\n    console.error("Environment variable MARITALK_API_KEY not found!");\n    process.exit(1);\n}\n\nasync function sendChatRequest(message) {\n    try {\n        const params = {\n            messages: [{ "role": "user", "content": message }],\n            do_sample: true,\n            max_tokens: 50,\n            temperature: 0.4,\n            top_p: 0.95,\n            model: "sabia-3",\n        };\n\n        const response = await fetch(CHAT_API_URL, {\n            headers: {\n                "Authorization": `Key ${process.env.MARITALK_API_KEY}`,\n                "Content-Type": "application/json",\n            },\n            method: "POST",\n            body: JSON.stringify(params),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error("Error sending chat request:", error);\n        throw error;\n    }\n}\n\nasync function main() {\n    try {\n        const result = await sendChatRequest(\'Hello, what is your name?\');\n        console.log("Response:", result);\n    } catch (error) {\n        console.error("Error in main function:", error);\n    }\n}\n\nmain();\n'})})}),(0,a.jsx)(o.A,{value:"C#",label:"C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'</TabItem>\n<TabItem value="C#" label="C#">\n```csharp\nusing OpenAI;\nusing OpenAI.Chat;\nusing System.ClientModel;\n\nnamespace ChatMariTalk\n{\n    class Program\n    {\n        static async Task Main(string[] args)\n        {\n            // Variables\n            string key = "";  // API key\n            string model = "sabia-3";\n            string url = "https://chat.maritaca.ai/api";\n            string projectName = "ExampleUsingMaritaca";\n\n            // Create the API credentials\n            ApiKeyCredential apiKeyCredential = new ApiKeyCredential(key);\n\n            // Configure the client for Maritaca API\n            OpenAIClientOptions openAIClientOptions = new OpenAIClientOptions\n            {\n                Endpoint = new Uri(url),\n                OrganizationId = projectName,\n                ApplicationId = projectName,\n                ProjectId = projectName\n            };\n\n            // Initialize ChatClient\n            ChatClient chatClient = new ChatClient(model, apiKeyCredential, openAIClientOptions);\n\n            // Set chat options\n            ChatCompletionOptions chatOptions = new ChatCompletionOptions\n            {\n                MaxTokens = 255,\n                Temperature = 0.7f,\n            };\n\n            // List to store chat messages\n            List<ChatMessage> chatMessages = new List<ChatMessage>();\n\n            // Show welcome menu\n            ShowMenu();\n            do\n            {\n                try\n                {\n                    // User prompt\n                    string prompt = GetUserPrompt();\n\n                    // Exit if the user types \'exit\'\n                    if (prompt.ToLower() == "exit")\n                        break;\n\n                    // Create and add user message to chat\n                    UserChatMessage userChat = ChatMessage.CreateUserMessage(prompt);\n                    chatMessages.Add(userChat);\n\n                    // Send message to API and receive response\n                    ChatCompletion chatCompletion = await chatClient.CompleteChatAsync(chatMessages, chatOptions);\n\n                    // Capture response from model\n                    AssistantChatMessage assistant = ChatMessage.CreateAssistantMessage(chatCompletion.Content[0].Text);\n                    chatMessages.Add(assistant);\n\n                    // Display the response\n                    ShowAssistantResponse(assistant);\n                }\n                catch (Exception e)\n                {\n                    DisplayError(e);\n                }\n            } while (true);\n\n            ShowExitMessage();\n        }\n\n        static void ShowMenu()\n        {\n            Console.WriteLine(new string(\'-\', 100));\n            Console.WriteLine("\\nWelcome to Maritaca Chat!\\n");\n            Console.WriteLine(new string(\'-\', 100));\n            Console.WriteLine("Type \'exit\' to end the chat.\\n");\n        }\n\n        static string GetUserPrompt()\n        {\n            Console.ForegroundColor = ConsoleColor.Green;\n            Console.Write($"[{DateTime.Now}] Enter your message: ");\n            Console.ResetColor();\n            string prompt = Console.ReadLine();\n            if (string.IsNullOrEmpty(prompt))\n            {\n                throw new Exception("Please enter a message.");\n            }\n            return prompt;\n        }\n\n        static void ShowAssistantResponse(AssistantChatMessage assistant)\n        {\n            Console.ForegroundColor = ConsoleColor.Yellow;\n            Console.WriteLine($"\\n[{DateTime.Now}] Assistant: {assistant.Content[0].Text}\\n");\n            Console.ResetColor();\n        }\n\n        static void DisplayError(Exception e)\n        {\n            Console.ForegroundColor = ConsoleColor.Red;\n            Console.WriteLine($"\\n[{DateTime.Now}] Error: {e.Message}\\n");\n            Console.ResetColor();\n        }\n\n        static void ShowExitMessage()\n        {\n            Console.WriteLine(new string(\'-\', 100));\n            Console.WriteLine("\\nThank you for using Maritaca Chat!\\n");\n        }\n    }\n}\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"integrations",children:"Integrations"}),"\n",(0,a.jsxs)("div",{style:{display:"flex",justifyContent:"space-around",margin:"20px 0",flexWrap:"wrap"},children:[(0,a.jsxs)("a",{href:"https://docs.llamaindex.ai/en/latest/examples/llm/maritalk/",className:"icon-box",style:{flex:"1 1 200px",margin:"10px",textAlign:"center"},children:[(0,a.jsx)("i",{className:"fas fa-file-alt",style:{fontSize:"2em",marginBottom:"10px"}}),(0,a.jsx)("h3",{children:"LlamaIndex"}),(0,a.jsx)("p",{children:"Maritalk on LlamaIndex."})]}),(0,a.jsxs)("a",{href:"https://python.langchain.com/v0.2/docs/integrations/chat/maritalk/",className:"icon-box",style:{flex:"1 1 200px",margin:"10px",textAlign:"center"},children:[(0,a.jsx)("i",{className:"fas fa-link",style:{fontSize:"2em",marginBottom:"10px"}}),(0,a.jsx)("h3",{children:"LangChain"}),(0,a.jsx)("p",{children:"Maritalk + RAG with LangChain."})]})]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var a=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(6540),s=t(4164),r=t(3104),o=t(6347),i=t(205),l=t(7485),c=t(1682),u=t(679);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,p]=m({queryString:t,groupId:s}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,u.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),C=(()=>{const e=c??g;return d({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{C&&l(C)}),[C]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,r]),tabValues:r}}var f=t(2303);const C={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function b(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),s=i[t].value;s!==a&&(c(n),o(s))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:p,onClick:u,...r,className:(0,s.A)("tabs__item",C.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",C.tabList),children:[(0,x.jsx)(b,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,x.jsx)(y,{...e,children:p(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);